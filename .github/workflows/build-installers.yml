name: Build Installers

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cx_Freeze
          pip install -r requirements.txt
      
      - name: Install NSIS
        run: |
          choco install nsis -y
      
      - name: Build Windows installer
        run: |
          python build_installers.py --skip-linux
        
      - name: Upload Windows installer
        uses: actions/upload-artifact@v2
        with:
          name: windows-installer
          path: build/installers/FBVideoDataTool_*.exe
      
      - name: Upload Universal installer script
        uses: actions/upload-artifact@v2
        with:
          name: universal-installer
          path: build/installers/install.py
      
      - name: Upload source distribution
        uses: actions/upload-artifact@v2
        with:
          name: source-distribution
          path: build/installers/fbvideodata-*-source.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y imagemagick debhelper fakeroot
      
      - name: Build Linux package
        run: |
          python build_installers.py --skip-windows
      
      - name: Upload Linux package
        uses: actions/upload-artifact@v2
        with:
          name: linux-package
          path: build/installers/facebook-video-data-tool_*.deb

  upload-to-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        
      - name: List downloaded files
        run: find . -type f | sort
      
      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-installer/FBVideoDataTool_*.exe
            linux-package/facebook-video-data-tool_*.deb
            universal-installer/install.py
            source-distribution/fbvideodata-*-source.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
